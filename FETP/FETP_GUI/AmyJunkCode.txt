From FETP_Form.cs:

        private static int NUMBER_OF_EXAMS_PER_DAY;
        private static int NUMBER_OF_EXAMS;

		    //views = new Dictionary<string, UserControl>();

			//if (views.Keys.Contains("Single"))
			//{
			//    miniCal = (SingleDayCalendar)views["Single"];
			//}
			//else
			//{
			//    views.Add("Single", miniCal);
			//}

			//if (views.Keys.Contains("Text"))
            //{
            //    textCal = (TextSchedule)views["Text"];
            //}
            //else
            //{
            //    views.Add("Text", textCal);
            //}

From FullCalendar.cs:


        //private static int NUMBER_OF_DAYS = 4;
        //private static int NUMBER_OF_EXAMS_PER_DAY = 10;

		
            //InitializeComponent();

		
            
            //Button temp = destination;
            //destination = source;
            //source = destination;

			//------------------------------------------------------------------------------------------

        //private Button dragSource;

        //private void button_MouseDown(object sender, MouseEventArgs e)
        //{
        //    dragSource = (Button)sender;
        //    dragSource.DoDragDrop(dragSource, DragDropEffects.Copy | DragDropEffects.Move);
        //}

        //private void button_DragEnter(object sender, DragEventArgs e)
        //{
        //    if (e.Data.GetType().Equals(typeof(Button)))
        //        e.Effect = DragDropEffects.Copy;
        //    else
        //        e.Effect = DragDropEffects.None;
        //}

        //private void button_DragDrop(object sender, DragEventArgs e)
        //{
        //    Button b = (Button)sender;

        //    Button temp = b;
        //    b = dragSource;
        //    dragSource = temp;
        //}

		
                //Highlight selected sender Button
                Button b = (Button)sender;
                b.Select();

From CalendarExtension.cs:


            //for(int j=0; (j < (_schedule.Blocks.Count()) && _schedule.Blocks[j] != null); j++)
            //{
            //    nonNullBlocks[j] = _schedule.Blocks[j];
            //}